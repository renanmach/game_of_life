Conway's Game of Life

********************************************************************************
Input:
<number of iterations> <number of threads>
<number of rows> <number of cols>
nrows*ncols 0 or 1 elements representing the initial board configuration

Example of input:
10 2
4 5
1 0 1 1 1
0 0 0 1 1
1 1 1 0 0
1 0 0 0 0
********************************************************************************
Output:

****METHOD USED FOR THE PRESENTATION****
-If compiled with -DCOMPARE_SERIAL, the program outputs 5 lines:
1 the parallel method it is running
2 the paralell time
3 the sequential time
4 the number of differences between parallel and sequential. If no difference is found,
so the parallel implementation is correct and it prints "Same result!"
5 the speedup

****OTHER WAYS TO RUN****
-If compiled with no flags, the program outputs 5 lines:
1 the parallel method it is running
2 the paralell time

-If compiled with -DPRINT_BOARD, the program outputs:
1 the parallel method it is running
2 a blank line
3 the board
4 a blank line
5 the parallel time

-If compiled with -DPRINT_BOARD and -DCOMPARE_SERIAL, the program outputs:
1 the parallel method it is running
2 a blank line
3 the board
4 a blank line
5 the paralell time
6 the sequential time
7 the number of differences between parallel and sequential. If no difference is found,
so the parallel implementation is correct and it prints "Same result!"
8 the speedup
********************************************************************************
create_test_case.c

Create test case can be used to create a test case with a random board.
You just need to change the constants defined at the beginning of the file
********************************************************************************
